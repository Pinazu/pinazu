/v1/users:
  get:
    tags:
      - users
    summary: List all users
    description: Returns a list of all users
    operationId: listUsers
    responses:
      '200':
        description: A list of users
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
  post:
    tags:
      - users
    summary: Create a new user
    description: Creates a new user
    operationId: createUser
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserRequest'
    responses:
      '201':
        description: User created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '400':
        description: Invalid parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequest'
      '409':
        description: User already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAlreadyExists'

/v1/users/{user_id}:
  parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  get:
    tags:
      - users
    summary: Get user by ID
    description: Returns a specific user by ID
    operationId: getUser
    responses:
      '200':
        description: User details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'
  put:
    tags:
      - users
    summary: Update user
    description: Updates an existing user
    operationId: updateUser
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRequest'
    responses:
      '200':
        description: User updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '400':
        description: Invalid parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequest'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'
      '409':
        description: User data conflicts (e.g., email already exists)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAlreadyExists'
  delete:
    tags:
      - users
    summary: Delete user
    description: Deletes a user
    operationId: deleteUser
    responses:
      '204':
        description: User deleted successfully
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'

/v1/users/{user_id}/roles:
  parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  get:
    tags:
      - users
    summary: List role for user mapping
    description: Returns a list of role for an user
    operationId: listRoleForUser
    responses:
      '200':
        description: A list of role for the user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleMappingList'
      '404':
        description: Role not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'
  post:
    tags:
      - users
    summary: Add role to user
    description: Adds a role to a user
    operationId: addRoleToUser
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddRoleToUserRequest'
    responses:
      '201':
        description: Role added successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleMapping'
      '400':
        description: Invalid parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequest'
      '404':
        description: User or role not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'
      '409':
        description: Role already exists for user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAlreadyExists'

/v1/users/{user_id}/roles/{role_id}:
  parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    - name: role_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  delete:
    tags:
      - users
    summary: Remove role from user
    description: Removes a role from a user
    operationId: removeRoleFromUser
    responses:
      '204':
        description: Role removed successfully
      '404':
        description: User or role not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFound'