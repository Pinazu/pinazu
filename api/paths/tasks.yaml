/v1/tasks:
  get:
    tags:
      - tasks
    summary: List all tasks
    description: Returns a list of all tasks
    operationId: listTasks
    parameters:
      - $ref: "#/components/parameters/perPageParam"
      - $ref: "#/components/parameters/pageParam"
    responses:
      "200":
        description: A list of tasks
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskList"
  post:
    tags:
      - tasks
    summary: Create a new task
    description: Creates a new task
    operationId: createTask
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTaskRequest"
    responses:
      "201":
        description: Task created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "404":
        description: Thread not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"
      "400":
        description: Invalid parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequest'

/v1/tasks/{task_id}:
  parameters:
    - name: task_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  get:
    tags:
      - tasks
    summary: Get task by ID
    description: Returns a specific task by ID
    operationId: getTask
    responses:
      "200":
        description: Task details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"
  put:
    tags:
      - tasks
    summary: Update an existing task
    description: Updates an existing task
    operationId: updateTask
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTaskRequest"
    responses:
      "200":
        description: Task updated successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"
  delete:
    tags:
      - tasks
    summary: Delete a task
    description: Deletes a specific task by ID
    operationId: deleteTask
    responses:
      "204":
        description: Task deleted successfully
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"

/v1/tasks/{task_id}/execute:
  parameters:
    - name: task_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  post:
    tags:
      - tasks
    summary: Execute a task
    description: Executes a task with the provided parameters
    operationId: executeTask
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExecuteTaskRequest"
    responses:
      "200":
        description: Task executed successfully (JSON response or SSE stream based on Accept header)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRun"
          text/event-stream:
            schema:
              type: string
              description: Server-Sent Events stream of task execution
        headers:
          Cache-Control:
            schema:
              type: string
              example: "no-cache"
          Connection:
            schema:
              type: string
              example: "keep-alive"
      "400":
        description: Invalid parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequest'
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"

/v1/tasks/{task_id}/runs:
  parameters:
    - name: task_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  get:
    tags:
      - tasks
    summary: Get all task runs for a task
    description: Returns all runs for a specific task
    operationId: listTaskRuns
    responses:
      "200":
        description: List of task runs
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaskRun"
      "404":
        description: Task not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"

/v1/tasks/{task_run_id}/status:
  parameters:
    - name: task_run_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  get:
    tags:
      - tasks
    summary: Get task run by ID
    description: Returns a specific task run by ID
    operationId: getTaskRun
    responses:
      "200":
        description: Task run details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRun"
      "404":
        description: Task run not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotFound"