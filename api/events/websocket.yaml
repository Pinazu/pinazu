events:
  - name: WebsocketResponse
    type: consumer
    description: Event message to send back service event to the client via websocket. Sent by services, consumed by websocket handler.
    subject: v1.svc.api.ws.response
    websocketEvent: true
    messageFields:
      # Core fields matching anthropic.MessageStreamEventUnion structure
      - name: Message
        type: anthropic.Message
        import: "github.com/anthropics/anthropic-sdk-go"
        description: This field is from variant MessageStartEvent
        optional: true
      - name: Type
        type: string
        description: "Event type - any of message_start, message_delta, message_stop, content_block_start, content_block_delta, content_block_stop"
      - name: Delta
        type: anthropic.MessageStreamEventUnionDelta
        import: "github.com/anthropics/anthropic-sdk-go"
        description: This field is a union of MessageDeltaEventDelta, RawContentBlockDeltaUnion
        optional: true
      - name: Usage
        type: anthropic.MessageDeltaUsage
        import: "github.com/anthropics/anthropic-sdk-go"
        description: This field is from variant MessageDeltaEvent
        optional: true
      - name: ContentBlock
        type: anthropic.ContentBlockStartEventContentBlockUnion
        import: "github.com/anthropics/anthropic-sdk-go"
        description: This field is from variant ContentBlockStartEvent
        optional: true
      - name: Index
        type: int64
        description: Content block index
        optional: true
      # Additional fields for context
      - name: Provider
        type: db.ProviderModel
        import: "github.com/pinazu/internal/db"
        description: The provider name that the agent is calling from
    customValidation: |
      if msg.Type == "" {
        return fmt.Errorf("event type is required")
      }
      if msg.Provider == db.ProviderModelNil {
        return fmt.Errorf("provider is required")
      }

  - name: WebsocketTaskLifecycle
    type: consumer
    description: Event message for task lifecycle events (task_start, task_stop, etc.) sent to websocket clients
    subject: v1.svc.api.ws.task.lifecycle
    websocketEvent: true
    messageFields:
      - name: Type
        type: string
        description: "Task lifecycle event type (task_start, task_stop, task_pause, task_resume, task_error)"
      - name: TaskId
        type: string
        description: "ID of the task"
        optional: true
      - name: ThreadId
        type: uuid.UUID
        import: "github.com/google/uuid"
        description: "ID of the thread"
        optional: true
      - name: Message
        type: string
        description: "Human readable message about the event"
        optional: true
    customValidation: |
      if msg.Type == "" {
        return fmt.Errorf("type is required")
      }