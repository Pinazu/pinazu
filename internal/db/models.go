// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Agent struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	Specs       pgtype.Text        `db:"specs" json:"specs"`
	CreatedBy   uuid.UUID          `db:"created_by" json:"created_by"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type AgentPermissionMapping struct {
	MappingID    uuid.UUID          `db:"mapping_id" json:"mapping_id"`
	AgentID      uuid.UUID          `db:"agent_id" json:"agent_id"`
	PermissionID uuid.UUID          `db:"permission_id" json:"permission_id"`
	AssignedAt   pgtype.Timestamptz `db:"assigned_at" json:"assigned_at"`
	AssignedBy   uuid.UUID          `db:"assigned_by" json:"assigned_by"`
}

type Flow struct {
	ID               uuid.UUID        `db:"id" json:"id"`
	Name             string           `db:"name" json:"name"`
	Description      pgtype.Text      `db:"description" json:"description"`
	Engine           string           `db:"engine" json:"engine"`
	AdditionalInfo   JsonRaw          `db:"additional_info" json:"additional_info"`
	Tags             []string         `db:"tags" json:"tags"`
	CreatedAt        pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt        pgtype.Timestamp `db:"updated_at" json:"updated_at"`
	ParametersSchema JsonRaw          `db:"parameters_schema" json:"parameters_schema"`
	CodeLocation     pgtype.Text      `db:"code_location" json:"code_location"`
	Entrypoint       pgtype.Text      `db:"entrypoint" json:"entrypoint"`
}

type FlowRun struct {
	FlowRunID          uuid.UUID          `db:"flow_run_id" json:"flow_run_id"`
	FlowID             uuid.UUID          `db:"flow_id" json:"flow_id"`
	Parameters         JsonRaw            `db:"parameters" json:"parameters"`
	Status             FlowStatus         `db:"status" json:"status"`
	Engine             string             `db:"engine" json:"engine"`
	CreatedAt          pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt          pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	StartedAt          pgtype.Timestamptz `db:"started_at" json:"started_at"`
	FinishedAt         pgtype.Timestamptz `db:"finished_at" json:"finished_at"`
	TaskStatuses       JsonRaw            `db:"task_statuses" json:"task_statuses"`
	SuccessTaskResults JsonRaw            `db:"success_task_results" json:"success_task_results"`
	ErrorMessage       pgtype.Text        `db:"error_message" json:"error_message"`
	RetryCount         pgtype.Int4        `db:"retry_count" json:"retry_count"`
	MaxRetries         pgtype.Int4        `db:"max_retries" json:"max_retries"`
}

type FlowRunEvent struct {
	EventID        uuid.UUID          `db:"event_id" json:"event_id"`
	FlowRunID      pgtype.UUID        `db:"flow_run_id" json:"flow_run_id"`
	TaskName       pgtype.Text        `db:"task_name" json:"task_name"`
	EventType      string             `db:"event_type" json:"event_type"`
	EventData      JsonRaw            `db:"event_data" json:"event_data"`
	EventTimestamp pgtype.Timestamptz `db:"event_timestamp" json:"event_timestamp"`
	Source         pgtype.Text        `db:"source" json:"source"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type FlowTaskRun struct {
	FlowRunID       uuid.UUID          `db:"flow_run_id" json:"flow_run_id"`
	TaskName        string             `db:"task_name" json:"task_name"`
	Status          FlowStatus         `db:"status" json:"status"`
	Result          JsonRaw            `db:"result" json:"result"`
	ResultCacheKey  pgtype.Text        `db:"result_cache_key" json:"result_cache_key"`
	ErrorMessage    pgtype.Text        `db:"error_message" json:"error_message"`
	CreatedAt       pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	StartedAt       pgtype.Timestamptz `db:"started_at" json:"started_at"`
	FinishedAt      pgtype.Timestamptz `db:"finished_at" json:"finished_at"`
	DurationSeconds pgtype.Float8      `db:"duration_seconds" json:"duration_seconds"`
	RetryCount      pgtype.Int4        `db:"retry_count" json:"retry_count"`
	MaxRetries      pgtype.Int4        `db:"max_retries" json:"max_retries"`
}

type Permission struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	Content     JsonRaw            `db:"content" json:"content"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Role struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	IsSystem    pgtype.Bool        `db:"is_system" json:"is_system"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type RolePermissionMapping struct {
	MappingID    uuid.UUID          `db:"mapping_id" json:"mapping_id"`
	RoleID       uuid.UUID          `db:"role_id" json:"role_id"`
	PermissionID uuid.UUID          `db:"permission_id" json:"permission_id"`
	AssignedAt   pgtype.Timestamptz `db:"assigned_at" json:"assigned_at"`
	AssignedBy   uuid.UUID          `db:"assigned_by" json:"assigned_by"`
}

type Session struct {
	Token     string             `db:"token" json:"token"`
	UserID    string             `db:"user_id" json:"user_id"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	ExpiresAt pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
}

type Task struct {
	ID             string             `db:"id" json:"id"`
	ThreadID       uuid.UUID          `db:"thread_id" json:"thread_id"`
	MaxRequestLoop int32              `db:"max_request_loop" json:"max_request_loop"`
	AdditionalInfo JsonRaw            `db:"additional_info" json:"additional_info"`
	ParentTaskID   pgtype.Text        `db:"parent_task_id" json:"parent_task_id"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	CreatedBy      uuid.UUID          `db:"created_by" json:"created_by"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type TasksRun struct {
	TaskRunID    uuid.UUID          `db:"task_run_id" json:"task_run_id"`
	TaskID       string             `db:"task_id" json:"task_id"`
	Status       TaskRunStatus      `db:"status" json:"status"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	CurrentLoops int32              `db:"current_loops" json:"current_loops"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	StartedAt    pgtype.Timestamptz `db:"started_at" json:"started_at"`
	FinishedAt   pgtype.Timestamptz `db:"finished_at" json:"finished_at"`
}

type Thread struct {
	ID        uuid.UUID          `db:"id" json:"id"`
	Title     string             `db:"title" json:"title"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	UserID    uuid.UUID          `db:"user_id" json:"user_id"`
}

type ThreadContext struct {
	ContextID      uuid.UUID          `db:"context_id" json:"context_id"`
	Summary        pgtype.Text        `db:"summary" json:"summary"`
	ActionContexts JsonRaw            `db:"action_contexts" json:"action_contexts"`
	Metadata       JsonRaw            `db:"metadata" json:"metadata"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type ThreadMessage struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	ThreadID    uuid.UUID          `db:"thread_id" json:"thread_id"`
	Message     JsonRaw            `db:"message" json:"message"`
	SenderType  SenderMessageType  `db:"sender_type" json:"sender_type"`
	ResultType  *ResultMessageType `db:"result_type" json:"result_type"`
	StopReason  pgtype.Text        `db:"stop_reason" json:"stop_reason"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	SenderID    uuid.UUID          `db:"sender_id" json:"sender_id"`
	Citations   []JsonRaw          `db:"citations" json:"citations"`
	RecipientID uuid.UUID          `db:"recipient_id" json:"recipient_id"`
}

type Tool struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	Config      ToolConfig         `db:"config" json:"config"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	CreatedBy   uuid.UUID          `db:"created_by" json:"created_by"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type ToolRun struct {
	ID           string             `db:"id" json:"id"`
	ToolID       uuid.UUID          `db:"tool_id" json:"tool_id"`
	ConnectionID uuid.UUID          `db:"connection_id" json:"connection_id"`
	ThreadID     uuid.UUID          `db:"thread_id" json:"thread_id"`
	AgentID      uuid.UUID          `db:"agent_id" json:"agent_id"`
	RecipientID  uuid.UUID          `db:"recipient_id" json:"recipient_id"`
	Input        JsonRaw            `db:"input" json:"input"`
	Result       JsonRaw            `db:"result" json:"result"`
	Status       ToolRunStatus      `db:"status" json:"status"`
	Duration     pgtype.Float8      `db:"duration" json:"duration"`
	ParentRunID  pgtype.Text        `db:"parent_run_id" json:"parent_run_id"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type User struct {
	ID             uuid.UUID          `db:"id" json:"id"`
	Name           string             `db:"name" json:"name"`
	Email          string             `db:"email" json:"email"`
	AdditionalInfo JsonRaw            `db:"additional_info" json:"additional_info"`
	PasswordHash   string             `db:"password_hash" json:"password_hash"`
	ProviderName   ProviderName       `db:"provider_name" json:"provider_name"`
	IsOnline       pgtype.Bool        `db:"is_online" json:"is_online"`
	LastLogin      pgtype.Timestamptz `db:"last_login" json:"last_login"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type UserConnection struct {
	ConnectionID string             `db:"connection_id" json:"connection_id"`
	UserID       string             `db:"user_id" json:"user_id"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type UserRoleMapping struct {
	MappingID  uuid.UUID          `db:"mapping_id" json:"mapping_id"`
	UserID     uuid.UUID          `db:"user_id" json:"user_id"`
	RoleID     uuid.UUID          `db:"role_id" json:"role_id"`
	AssignedAt pgtype.Timestamptz `db:"assigned_at" json:"assigned_at"`
	AssignedBy uuid.UUID          `db:"assigned_by" json:"assigned_by"`
}

type WorkerHeartbeat struct {
	WorkerID      string             `db:"worker_id" json:"worker_id"`
	WorkerName    pgtype.Text        `db:"worker_name" json:"worker_name"`
	Status        WorkerStatus       `db:"status" json:"status"`
	LastHeartbeat pgtype.Timestamptz `db:"last_heartbeat" json:"last_heartbeat"`
	WorkerInfo    JsonRaw            `db:"worker_info" json:"worker_info"`
	CreatedAt     pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}
