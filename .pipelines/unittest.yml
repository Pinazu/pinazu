default:
  tags:
    - linux
    - self-hosted

workflow:
  rules:
    # On push to main branch or merge request targeting main
    # Run CI toward sandbox accounts
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

variables:
  POSTGRES_USER: "pinazu"
  POSTGRES_PASSWORD: "example_password"
  POSTGRES_DB: "pinazu"
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
  POSTGRES_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
  NATS_URL: "nats://nats:4222"
  BEDROCK_ROLE_ARN: "arn:aws:iam::130506138320:role/bedrock-cross-account-role"

stages:
  - unittest
  - e2e

Run Unit Test:
  image: 271540607717.dkr.ecr.ap-southeast-1.amazonaws.com/secure-vl-base/golang:1.24-r1
  services:
    - name: postgres:17-alpine
      alias: postgres
    - name: nats:linux
      alias: nats
      command:
        - "-js"
        - "-m"
        - "8222"
  stage: unittest
  before_script:
    - echo "Assume role to get AWS credentials"
    - |
      echo "Assume role for Bedrock access: ${BEDROCK_ROLE_ARN}"
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
      $(aws sts assume-role \
      --role-arn ${BEDROCK_ROLE_ARN} \
      --role-session-name GitLabRunner \
      --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
      --output text))
  script:
    - echo "Running unit tests"
    - echo "Running Database Migrations against Postgres"
    - go run sql/ci/main.go
    - echo "Running Unit Tests"
    - go test -v ./...
    - echo "Building Pinazu CLI"
    - CGO_ENABLED=0 go build -o ./dist/pinazu ./cmd/
  artifacts:
    paths:
      - dist/pinazu
    expire_in: 1 hour

Run e2e Test:
  image: 271540607717.dkr.ecr.ap-southeast-1.amazonaws.com/secure-vl-base/nodejs:20-r2
  services:
    - name: postgres:17-alpine
      alias: postgres
    - name: nats:linux
      alias: nats
      command:
        - "-js"
        - "-m"
        - "8222"
  stage: e2e
  before_script:
    - echo "Assume role to get AWS credentials"
    - |
      echo "Assume role for Bedrock access: ${BEDROCK_ROLE_ARN}"
      export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
      $(aws sts assume-role \
      --role-arn ${BEDROCK_ROLE_ARN} \
      --role-session-name GitLabRunner \
      --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
      --output text))
  script:
    - echo "Running e2e tests"
    - echo "Running Pinazu CLI in separate threads"
    - |
      cat << EOF > /tmp/config.yaml
      environment: "development"

      http:
        port: "8080"

      nats:
        url: "nats://nats:4222"

      database:
        host: "postgres"
        port: "5432"
        user: "pinazu"
        password: "example_password"
        dbname: "pinazu"

      tracing:
        service_name: "pinazu-core"
        exporter_endpoint: "localhost:4317"
        exporter_insecure: true
        sampling_ratio: 1.0
      scheduler:
        enable_retries: true
        max_retries: 3
        retry_backoff_seconds: 5
        enable_dead_lettering: true
        dead_letter_topic: "scheduler.dead_letter"
        batch_size: 10
        batch_timeout_seconds: 5
      EOF
    - ./dist/pinazu serve all --config /tmp/config.yaml &
    # Note process ID to kill later
    - PINAZU_PID=$!
    - echo "Waiting for Pinazu server to start with process ID $PINAZU_PID"
    - sleep 10
    - echo "Running e2e tests"
    - cd e2e
    - npm ci
    - npm run test
    - echo "Killing Pinazu server"
    - kill $PINAZU_PID || true
  dependencies:
    - Run Unit Test

